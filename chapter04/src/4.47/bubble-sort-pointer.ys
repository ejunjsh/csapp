/* bubble-sort-pointer.ys */
.pos 0
	irmovq stack, %rsp
	call main
	halt

# Array of 4 elements
.align 8
data:
  .quad 0x0000000000000004
  .quad 0x0000000000000003
  .quad 0x0000000000000002
  .quad 0x0000000000000001
  
main:
  irmovq data,%rdi
  irmovq 4,%rsi
  call ysBubbleP
  ret

# long ys_bubble_p(long *data, long count)
# data in %rdi, count in %rsi
ysBubbleP:
  rrmovq %rsi,%r12
  rrmovq %rdi,%rsi
  irmovq $1,%r13
  irmovq $8,%r14
  subq %r13,%r12
L10:
  addq %r14,%rsi
  subq %r13,%r12
  jne L10
  jmp L2
L4:
  mrmovq 8(%rax), %r9
  mrmovq (%rax), %r10
  rrmovq %r9, %r8
  subq %r10, %r8
  jge L3
  rmmovq %r10, 8(%rax)
  rmmovq %r9, (%rax)
L3:
  irmovq $8, %r8
  addq %r8, %rax
  jmp L5
L6:
  rrmovq %rdi, %rax
L5:
  rrmovq %rsi, %r8
  subq %rax, %r8
  jg L4
  irmovq $8, %r8
  subq %r8, %rsi
L2:
  rrmovq %rsi, %r8
  subq %rdi, %r8
  jg L6
  ret


.pos 0x200
stack:
